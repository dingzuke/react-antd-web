{"version":3,"sources":["modules/Home/index.scss","modules/Login/index.scss","utils/router/createHistory.js","modules/Home/index.js","modules/Login/index.js","modules/index.js","utils/myRedux/actionTypes.js","utils/myRedux/actions.js","utils/myRedux/reducers.js","utils/myRedux/createStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","modle","tabBarPosition","am-tab-bar","login","title","loginTo","createBrowserHistory","css","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","goLogin","history","push","some","state","selectedTab","hidden","fullScreen","_this2","react_default","a","createElement","className","button_default","type","onClick","Component","modules","Home","Login","console","log","location","actionTypes","createActions","handleActions","_handleActions","defineProperty","action","objectSpread","enthusiasmLevel","Math","max","newData","payload","window","localStorage","setItem","JSON","stringify","describe","parse","getItem","store","createStore","reducers","es","locale_provider_default","locale","undefined","Router","Switch","Route","path","component","Redirect","to","pathname","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28ea878c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modle\":\"index_modle__s-yoh\",\"tabBarPosition\":\"index_tabBarPosition__UZJcN\",\"am-tab-bar\":\"index_am-tab-bar__2Rs15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"index_login__1TlcL\",\"title\":\"index_title__3q6uP\",\"loginTo\":\"index_loginTo__20wTZ\"};","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();","import React, { Component } from 'react';\nimport { history } from 'src/utils/router';\nimport { Button } from 'antd';\nconst css = require('./index.scss');\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedTab: 'blueTab',\n\t\t\thidden: false,\n\t\t\tfullScreen: false,\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={css.modle}>\n\t\t\t\t<div>预加载测试2</div>\n\t\t\t\t<Button type=\"primary\" onClick={() => this.goLogin()}>跳转登录</Button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgoLogin = () => {\n\t\thistory.push('/login', { some: 'state' });\n\t}\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\nconst css = require('./index.scss');\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tcomponentDidMount() {\n\t\tconsole.log('路由传参', this.props.location.state);\n\t}\n\trender() {\n\t\treturn (\n\t\t<div className={css.login}>\n\t\t\t登录\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n","import Home from './Home';\nimport Login from './Login';\nexport default {\n    Home,\n    Login,\n};","export default {\n    INCREMENT_ENTHUSIASM: 'INCREMENT_ENTHUSIASM',\n    DECREMENT_ENTHUSIASM: 'DECREMENT_ENTHUSIASM',\n    SET_ENTHUSIASM: 'SET_ENTHUSIASM',\n    SET_NEW_MSG: 'SET_NEW_MSG',\n};","import { createActions } from 'redux-actions';\nimport actionTypes from './actionTypes';\n\nexport default createActions(\n    actionTypes.INCREMENT_ENTHUSIASM,\n    actionTypes.DECREMENT_ENTHUSIASM,\n    actionTypes.SET_NEW_MSG,\n    actionTypes.SET_ENTHUSIASM,\n);","import { handleActions } from 'redux-actions';\nimport actionTypes from './actionTypes';\n\n// 初始化redux数据\nconst initialState = () => {\n    return JSON.parse(window.localStorage.getItem('$$/User/info')) || {\n        enthusiasmLevel: 2,\n        describe: 'ant-mobile + react + redux, 个人github了解更多...',\n    };\n};\n\n// actions\nexport default handleActions({\n    [actionTypes.INCREMENT_ENTHUSIASM]: (state, action) => {\n        return {\n            ...state,\n            enthusiasmLevel: state.enthusiasmLevel + 1,\n        };\n    },\n    [actionTypes.DECREMENT_ENTHUSIASM]: (state, action) => {\n        return {\n            ...state,\n            enthusiasmLevel: Math.max(1, state.enthusiasmLevel - 1),\n        };\n    },\n    [actionTypes.SET_ENTHUSIASM]: (state, action) => {\n        const newData = {\n            ...state,\n            ...action.payload,\n        };\n        // 保存到localStorage 防止刷新数据丢失\n        // userInfo.cToken ? Cookies.set('cToken', userInfo.cToken) : Cookies.remove('cToken');\n        window.localStorage.setItem('$$/User/info', JSON.stringify(newData));\n        return newData;\n    },\n    [actionTypes.SET_NEW_MSG]: (state, action) => {\n        return {\n            ...state,\n            describe: action.payload.describe,\n        };\n    },\n    \n}, initialState());","import { reducers } from 'src/utils/myRedux';\nimport { createStore } from 'redux';\nconst store = createStore(reducers,\n    window['__REDUX_DEVTOOLS_EXTENSION__'] && window['__REDUX_DEVTOOLS_EXTENSION__']()\n);\nexport default store;","import React, { Component } from 'react';\nimport { Route, Router, Switch, Redirect } from 'react-router-dom';\nimport { history } from 'src/utils/router';\nimport { LocaleProvider } from 'antd';\n// import { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport modules from './modules';\nimport { store } from 'src/utils/myRedux';\n\n// 国际化 --- 语言包配置(默认中文)\n// import language from 'antd/lib/locale-provider/ru_RU';\n// import language from 'antd/lib/locale-provider/en_US';\nconst language = undefined;\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <LocaleProvider locale={language}>\n          <Router history={history}>\n              <Switch>\n                  <Route path=\"/home\" component={modules.Home} />\n                  <Route path=\"/login\" component={modules.Login} />\n                  <Redirect path=\"/\" to={{ pathname: '/home' }} />\n              </Switch>\n          </Router>\n        </LocaleProvider>\n      </Provider >\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}